version: 0.2


phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=470727887694.dkr.ecr.us-east-1.amazonaws.com/eks
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"nodeapp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json 
  post_build:
    commands:
      - sh cluster.sh  
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$IMAGE_TAG"'@' deployment.yml
      - mkdir cluster
      - cd cluster
      - git clone https://github.com/vamsi-devops/node-app.git
      - cd node-app
      - kubectl apply -f deployment.yml
      - kubectl expose deployment 
      
      
      
      
      - curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp	
      - mv /tmp/eksctl /usr/local/bin
      - eksctl version
      - ssh -i "hh.pem" ec2-user@ec2-15-206-158-136.ap-south-1.compute.amazonaws.com
"date"
      - eksctl create cluster -f eksctl.yml

      
artifacts:
    files: imagedefinitions.json
